{"version":3,"file":"static/js/89.bf1ab7fe.chunk.js","mappings":"4PACA,EAAuB,sB,SCqDvB,EAhDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGH,GAAa,GAFhB,SAG0BI,EAAAA,GAAkBZ,GAH5C,OAIuB,KADda,EAHT,QAIYC,QAAgBR,GAAY,GACrCF,EAAUS,GALb,gDAOGH,GAAW,GAPd,yBASGF,GAAa,GAThB,2EAAD,EAYD,GAAE,CAACR,KAGF,2BACGO,IAAa,SAAC,KAAD,KAEZA,IAAcE,IACd,yBACGJ,GACC,eAAIU,UAAWC,EAAf,SACGb,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADC,OAQd,wEAKLX,IAAW,6EAGjB,C,8LClDDY,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,mCAAG,oGACLD,EAAAA,EAAAA,IACrB,8DAF0B,cACtBR,EADsB,yBAIrBA,EAASU,KAAKC,SAJO,2CAAH,qDAOdC,EAAa,mCAAG,WAAMzB,GAAN,uFACJqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,6DADI,cACrBa,EADqB,yBAIpBA,EAASU,MAJW,2CAAH,sDAObG,EAAU,mCAAG,WAAM1B,GAAN,uFACDqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,qEADC,cAClBa,EADkB,yBAIjBA,EAASU,KAAKI,MAJG,2CAAH,sDAOVC,EAAa,mCAAG,WAAM5B,GAAN,uFACJqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4EADI,cACrBa,EADqB,yBAIpBA,EAASU,KAAKC,SAJM,2CAAH,sDAObK,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,qFACyDS,EADzD,gCADG,cACpBjB,EADoB,yBAInBA,EAASU,KAAKC,SAJK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","servise/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__f6R8E\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../servise/api';\nimport { Audio } from 'react-loader-spinner';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  const [isReview, setIsReview] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const response = await API.reviewsMovies(movieId);\n        response.length === 0 && setIsReview(false);\n        setReview(response);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Audio />}\n\n      {!isLoading && !isError && (\n        <div>\n          {isReview ? (\n            <ul className={css.list}>\n              {review.map(({ author, content, id }) => (\n                <li key={id}>\n                  <h4>Author: {author}</h4>\n                  <p>{content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <h3>We do not have any rewiews for this movie</h3>\n          )}\n        </div>\n      )}\n\n      {isError && <h4>The resource you requested could not be found!</h4>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await axios.get(\n    '/trending/all/day?api_key=95dd584af2ff777437c63600de03549c'\n  );\n  return response.data.results;\n};\n\nexport const ditailsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data;\n};\n\nexport const castMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const reviewsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=95dd584af2ff777437c63600de03549c&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=95dd584af2ff777437c63600de03549c&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","review","setReview","isReview","setIsReview","isLoading","setIsLoading","isError","setIsError","useEffect","API","response","length","className","css","map","author","content","id","axios","trendingMovies","data","results","ditailsMovies","castMovies","cast","reviewsMovies","searchMovies","movie"],"sourceRoot":""}