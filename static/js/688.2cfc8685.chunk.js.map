{"version":3,"file":"static/js/688.2cfc8685.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/movieDescription/MovieDescription.module.css?a2d2","components/movieDescription/MovieDescription.jsx","webpack://react-homework-template/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.jsx","servise/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDescription_container__fsPuK\",\"boix-inform\":\"MovieDescription_boix-inform__2TqLA\"};","import PropTypes from 'prop-types';\nimport defaultPicture from '../../defaultPicture/default-pic.jpg';\nimport css from './MovieDescription.module.css';\n\nconst MovieDescription = ({ information }) => {\n  const {\n    poster_path,\n    title,\n    overview,\n    release_date = '',\n    genres = [],\n    vote_average,\n  } = information;\n\n  const userScore = Math.round(vote_average * 10);\n  const normalizeGanres = genres.map(el => el.name).join(' ');\n  const date = release_date.slice(0, 4);\n\n  return (\n    <div className={css.container}>\n      {poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n          alt={title}\n        />\n      ) : (\n        <img src={defaultPicture} alt=\"Default-Pic\" width=\"200\" />\n      )}\n\n      <div className={css['boix-inform']}>\n        <h2>\n          {title} ({date})\n        </h2>\n        <p>User Score: {userScore}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{normalizeGanres}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieDescription.propTypes = {\n  information: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default MovieDescription;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"MovieDetails_loader__RMFeg\"};","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Audio } from 'react-loader-spinner';\nimport * as API from '../../servise/api';\nimport MovieDescription from '../../components/movieDescription';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const response = await API.ditailsMovies(movieId);\n        setMovie(response);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div className={css.container}>\n      <Link to={backLinkHref.current}>‚ÜêGo back</Link>\n\n      {isLoading && <Audio wrapperClass={css.loader} />}\n\n      {!isLoading && !isError && (\n        <div>\n          <MovieDescription information={movie} />\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n\n      {isError && <h1>The resource you requested could not be found!</h1>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await axios.get(\n    '/trending/all/day?api_key=95dd584af2ff777437c63600de03549c'\n  );\n  return response.data.results;\n};\n\nexport const ditailsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data;\n};\n\nexport const castMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const reviewsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=95dd584af2ff777437c63600de03549c&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=95dd584af2ff777437c63600de03549c&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["information","poster_path","title","overview","release_date","genres","vote_average","userScore","Math","round","normalizeGanres","map","el","name","join","date","slice","className","css","src","alt","defaultPicture","width","useState","movie","setMovie","isLoading","setIsLoading","isError","setIsError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","API","response","to","current","wrapperClass","Suspense","axios","trendingMovies","data","results","ditailsMovies","castMovies","cast","reviewsMovies","searchMovies"],"sourceRoot":""}