{"version":3,"file":"static/js/746.32420fbc.chunk.js","mappings":"2LACA,EAAuB,yB,SCgCvB,EA7BkB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,cAApC,OACd,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMZ,GAA1C,UACGM,GAASE,EACTD,GAAQE,MAHJJ,EADK,KAUrB,C,+JClBD,EAAyB,uB,SCuDzB,EAhDe,WAAO,IAAD,EACnB,GAAgDQ,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACHF,IAGL,iBAAC,oGAEGN,GAAa,GAFhB,SAG0BS,EAAAA,GAAiBH,GAH3C,OAGSI,EAHT,OAIGZ,EAAoBY,GAJvB,gDAMGR,GAAW,GANd,yBAQGF,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACM,IASJ,OACE,4BACE,SAAC,KAAD,CAAQK,cAAe,CAAEC,OAAQ,IAAMC,SATtB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACZ,KAAlBD,EAAOF,OACHP,EAAgB,CAAC,GACjBA,EAAgB,CAAEC,MAAOQ,EAAOF,SACpCG,GACD,EAIG,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAO1B,KAAK,YACxB,mBAAQ0B,KAAK,SAAb,yBAGHjB,IAAa,SAAC,KAAD,CAAOkB,aAAc/B,KAEjCa,IAAcE,IAAW,SAAC,IAAD,CAAWnB,WAAYe,IAEjDI,IAAW,6EAGjB,C,8LCpDDiB,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,mCAAG,oGACLD,EAAAA,EAAAA,IACrB,8DAF0B,cACtBR,EADsB,yBAIrBA,EAASU,KAAKC,SAJO,2CAAH,qDAOdC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,iBACXK,EADW,6DADI,cACrBb,EADqB,yBAIpBA,EAASU,MAJW,2CAAH,sDAObI,EAAU,mCAAG,WAAMD,GAAN,uFACDL,EAAAA,EAAAA,IAAA,iBACXK,EADW,qEADC,cAClBb,EADkB,yBAIjBA,EAASU,KAAKK,MAJG,2CAAH,sDAOVC,EAAa,mCAAG,WAAMH,GAAN,uFACJL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4EADI,cACrBb,EADqB,yBAIpBA,EAASU,KAAKC,SAJM,2CAAH,sDAObM,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,qFACyDU,EADzD,gCADG,cACpBlB,EADoB,yBAInBA,EAASU,KAAKC,SAJK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/moviesList/MoviesList.module.css?a81a","components/moviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx","servise/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__7suCE\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MovesList = ({ collection }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {collection.map(({ id, title, name, original_title, original_name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title && original_title}\n            {name && original_name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovesList.propTypes = {\n  collection: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Movies_loader__iaSFj\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as API from '../../servise/api';\nimport { Audio } from 'react-loader-spinner';\nimport MovesList from 'components/moviesList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [collectionMovies, setCollectionMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    (async () => {\n      try {\n        setIsLoading(true);\n        const response = await API.searchMovies(query);\n        setCollectionMovies(response);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    values.search === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: values.search });\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik initialValues={{ search: '' }} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"search\" />\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n      {isLoading && <Audio wrapperClass={css.loader} />}\n\n      {!isLoading && !isError && <MovesList collection={collectionMovies} />}\n\n      {isError && <h3>The resource you requested could not be found!</h3>}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await axios.get(\n    '/trending/all/day?api_key=95dd584af2ff777437c63600de03549c'\n  );\n  return response.data.results;\n};\n\nexport const ditailsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data;\n};\n\nexport const castMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const reviewsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=95dd584af2ff777437c63600de03549c&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=95dd584af2ff777437c63600de03549c&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["collection","location","useLocation","className","css","map","id","title","name","original_title","original_name","to","state","from","useState","collectionMovies","setCollectionMovies","isLoading","setIsLoading","isError","setIsError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","API","response","initialValues","search","onSubmit","values","resetForm","type","wrapperClass","axios","trendingMovies","data","results","ditailsMovies","movieId","castMovies","cast","reviewsMovies","searchMovies","movie"],"sourceRoot":""}