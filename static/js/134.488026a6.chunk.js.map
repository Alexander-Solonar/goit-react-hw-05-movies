{"version":3,"file":"static/js/134.488026a6.chunk.js","mappings":"kLACA,EAAuB,yB,SCwBvB,EArBkB,SAAC,GAA6C,IAA3CA,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,aAA8B,IAAhBC,KAAAA,OAAgB,MAAT,GAAS,EAC7D,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACd,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKP,EAAOI,GAAMI,MAAOT,EAAjC,UACGM,EACAC,MAHIF,EADK,KAUrB,C,+LCfDK,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,mCAAG,oGACLD,EAAAA,EAAAA,IACrB,8DAF0B,cACtBE,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qDAOdC,EAAa,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,EAAAA,IAAA,iBACXM,EADW,6DADI,cACrBJ,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAU,mCAAG,WAAMD,GAAN,uFACDN,EAAAA,EAAAA,IAAA,iBACXM,EADW,qEADC,cAClBJ,EADkB,yBAIjBA,EAASC,KAAKK,MAJG,2CAAH,sDAOVC,EAAa,mCAAG,WAAMH,GAAN,uFACJN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4EADI,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAObM,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,qFACyDW,EADzD,gCADG,cACpBT,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,mICczB,UAxCe,WAAO,IAAD,EACnB,GAAgDQ,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAErCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAGL,iBAAC,oGACwBK,EAAAA,GAAiBL,GADzC,OACOhB,EADP,OAECY,EAAoBZ,GAFrB,0CAAD,EAID,GAAE,CAACgB,IASJ,OACE,4BACE,SAAC,KAAD,CAAQM,cAAe,CAAEC,OAAQ,IAAMC,SATtB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACZ,KAAlBD,EAAOF,OACHR,EAAgB,CAAC,GACjBA,EAAgB,CAAEC,MAAOS,EAAOF,SACpCG,GACD,EAIG,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOhC,KAAK,YACxB,mBAAQgC,KAAK,SAAb,0BAGJ,SAAC,IAAD,CACExC,WAAYwB,EACZvB,aAAc,CAAEwC,KAAMV,OAI7B,C","sources":["webpack://react-homework-template/./src/components/moviesList/MoviesList.module.css?a81a","components/moviesList/MoviesList.jsx","components/servise/api.js","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__7suCE\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MovesList = ({ collection, locationFrom, path = '' }) => {\n  return (\n    <ul className={css.list}>\n      {collection.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link to={`${path + id}`} state={locationFrom}>\n            {title}\n            {name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovesList.propTypes = {\n  location: PropTypes.array,\n  locationFrom: PropTypes.object.isRequired,\n  path: PropTypes.string,\n};\n\nexport default MovesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await axios.get(\n    '/trending/all/day?api_key=95dd584af2ff777437c63600de03549c'\n  );\n  return response.data.results;\n};\n\nexport const ditailsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data;\n};\n\nexport const castMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=95dd584af2ff777437c63600de03549c&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const reviewsMovies = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=95dd584af2ff777437c63600de03549c&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async movie => {\n  const response = await axios.get(\n    `search/movie?api_key=95dd584af2ff777437c63600de03549c&language=en-US&query=${movie}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as API from '../components/servise/api';\nimport MovesList from 'components/moviesList';\n\nconst Movies = () => {\n  const [collectionMovies, setCollectionMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    (async () => {\n      const response = await API.searchMovies(query);\n      setCollectionMovies(response);\n    })();\n  }, [query]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    values.search === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: values.search });\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik initialValues={{ search: '' }} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"search\" />\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n      <MovesList\n        collection={collectionMovies}\n        locationFrom={{ from: location }}\n      />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["collection","locationFrom","path","className","css","map","id","title","name","to","state","axios","trendingMovies","response","data","results","ditailsMovies","movieId","castMovies","cast","reviewsMovies","searchMovies","movie","useState","collectionMovies","setCollectionMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","API","initialValues","search","onSubmit","values","resetForm","type","from"],"sourceRoot":""}